load("//tools/build_rules:java_rules.bzl", "java_test")

java_library(
    name = "starlark-annot",
    srcs = glob([
        "src/main/java/net/starlark/java/annot/*.java",
    ]),
    required_for_source_only_abi = True,
    visibility = [
        "PUBLIC",
    ],
    deps = [
        "//third-party/java/jsr:jsr305",
    ],
)

java_library(
    name = "starlark-annot-processor-lib",
    srcs = glob([
        "src/main/java/net/starlark/java/annot/processor/*.java",
    ]),
    resources = [
        "src/main/resources/META-INF/services/javax.annotation.processing.Processor",
    ],
    resources_root = "src/main/resources",
    deps = [
        ":starlark-annot",
        "//third-party/java/errorprone:error-prone-annotations",
        "//third-party/java/guava:guava",
        "//third-party/java/jsr:jsr305",
    ],
)

java_annotation_processor(
    name = "starlark-annot-processor",
    processor_class = "net.starlark.java.annot.processor.StarlarkMethodProcessor",
    visibility = [
        "PUBLIC",
    ],
    deps = [
        ":starlark-annot-processor-lib",
    ],
)

java_library(
    name = "bazel",
    srcs = glob(
        [
            "src/main/java/**/*.java",
        ],
        exclude = [
            "src/main/java/net/starlark/java/annot/*.java",
        ],
    ),
    licenses = ["LICENSE"],
    plugins = [
        "//third-party/java/auto:auto_value_processor",
        ":starlark-annot-processor",
    ],
    visibility = ["PUBLIC"],
    exported_deps = [
        ":starlark-annot",
        "//third-party/java/auto:auto_value_annotations",
        "//third-party/java/errorprone:error-prone-annotations",
        "//third-party/java/gson:gson",
        "//third-party/java/guava:guava",
        "//third-party/java/jsr:jsr305",
        "//third-party/java/objenesis:objenesis",
        "//third-party/java/protobuf:protobuf",
        "//third-party/java/protobuf:protobuf-util",
    ],
)

export_file(
    name = "BcEval.java",
    src = "src/main/java/net/starlark/java/eval/BcEval.java",
)

java_test(
    name = "tests",
    srcs = glob(
        [
            "src/test/java/**/*.java",
        ],
        exclude = [
            "src/test/java/net/starlark/java/annot/processor/testsources/**/*.java",
            # This test does not work on Windows for unknown reason,
            # but we don't really care because
            # * we don't have local patches to Starlark
            # * we don't use annotation processor
            "src/test/java/net/starlark/java/annot/processor/StarlarkMethodProcessorTest.java",
        ],
    ),
    env = {
        "BC_EVAL_JAVA": "$(location :BcEval.java)",
    },
    plugins = [
        ":starlark-annot-processor",
    ],
    resources = glob([
        "src/test/java/net/starlark/java/annot/processor/testsources/**/*.java",
    ]),
    resources_root = "src/test/java",
    deps = [
        ":bazel",
        "//third-party/java/compile-testing:compile-testing",
        "//third-party/java/errorprone:error-prone-annotations",
        "//third-party/java/guava:guava",
        "//third-party/java/jsr:jsr305",
        "//third-party/java/junit:junit",
        "//third-party/java/protobuf:protobuf",
        "//third-party/java/truth:truth",
    ],
)

filegroup(
    name = "starlark-annot-sources",
    srcs = glob([
        "src/main/java/net/starlark/java/annot/**/*.java",
    ]),
)

export_file(
    name = "jars-for-idea/sources.sha1",
)

python_test(
    name = "jars-for-idea-verify",
    srcs = [
        "jars-for-idea/verify.py",
    ],
    env = {
        "STARLARK_ANNOT_SOURCES": "$(location :starlark-annot-sources)",
        "STARLARK_ANNOT_SOURCES_SHA1": "$(location :jars-for-idea/sources.sha1)",
    },
)
